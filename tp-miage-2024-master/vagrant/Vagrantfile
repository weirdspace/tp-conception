# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/debian12"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessible to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  #

  # Enable VirtualBox GUI mode
  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.memory = "6000" # Adjust memory allocation as needed
    vb.cpus = 2 # Adjust CPU allocation as needed
    vb.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
    vb.customize ["modifyvm", :id, "--mouse", "usbtablet"]
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
    # Disable Remote Display (VRDP)
    vb.customize ["modifyvm", :id, "--vrde", "off"]
    # Automatically install VirtualBox Guest Additions (sinon le copier/coller ne fonctionne pas)
    # Si besoin, installer ce plugin vagrant avec
    # 'export VAGRANT_DISABLE_STRICT_DEPENDENCY_ENFORCEMENT=1 && vagrant plugin install vagrant-vbguest'
    config.vbguest.auto_update = true


  end


   # Provisioning script to set language to French
  config.vm.provision "shell", inline: <<-SHELL
    # Set DEBIAN_FRONTEND to noninteractive
    export DEBIAN_FRONTEND=noninteractive

    # Update and install necessary language packages
    sudo apt-get update
    sudo apt-get install -y locales

    # Make sure the locale is available
    sudo sed -i '/fr_FR.UTF-8/s/^# //g' /etc/locale.gen

    # Generate and set the French locale
    sudo locale-gen fr_FR.UTF-8
    sudo update-locale LANG=fr_FR.UTF-8

    # Set the keyboard layout to French
    sudo sed -i 's/XKBLAYOUT=".*"/XKBLAYOUT="fr"/' /etc/default/keyboard
    sudo dpkg-reconfigure -f noninteractive keyboard-configuration
    sudo setupcon

    # Optionally set the timezone to a timezone in France
    sudo timedatectl set-timezone Europe/Paris

    # MAJ
    sudo apt-get update && apt upgrade -y
    sudo apt-get autoremove --purge
    sudo apt-get clean
    sudo apt-get autoclean

  SHELL

  # Provisioning script to install GNOME
  config.vm.provision "shell", inline: <<-SHELL
    # Set DEBIAN_FRONTEND to noninteractive
    export DEBIAN_FRONTEND=noninteractive

    sudo apt-get install -y gdm3 gnome-core gnome-tweaks snapd openjdk-17-jdk dbus-x11 geany
  SHELL

  # Installation du script de bash perso qui ajoute des actions spÃ©cifiques
  config.vm.provision "file", source: "./.bash_perso", destination: "/home/vagrant/.bash_perso"

  # Outils de dev
  config.vm.provision "shell", inline: <<-SHELL

    if ! grep -q  "bash_perso" /home/vagrant/.bashrc; then
      echo -e "\n# Scripts custom\n~/.bash_perso" >> /home/vagrant/.bashrc
    fi

    # Set DEBIAN_FRONTEND to noninteractive
    export DEBIAN_FRONTEND=noninteractive

    # Docker
    sudo apt-get install -y docker.io
    sudo usermod -G docker vagrant

    sudo snap install intellij-idea-community --classic
    sudo snap install dbeaver-ce
    sudo snap install insomnia

  SHELL

end
